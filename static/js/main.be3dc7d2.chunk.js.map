{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","btn","document","createElement","name","type","id","value","style","cssText","onclick","bridge","send","ad_format","then","data","console","log","result","catch","error","Home","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","user","subscribe","detail","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,oC,moBCYvCC,EAAMC,SAASC,cAAyD,SAAUF,EAAIG,KAAO,SACjGH,EAAII,KAAO,SACXJ,EAAIK,GAAK,aACTL,EAAIM,MAAQ,4BACZN,EAAIO,MAAMC,QAAU,qCACpBR,EAAIS,QAAU,WACdC,IAAOC,KAAK,wBAAyB,CAACC,UAAU,cAC/CC,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,EAAKG,WAC9BC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,OAG5B,IAuCeC,EAvCF,SAAC,GAAD,IAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAOjB,GAAIA,GACV,kBAAC,IAAD,gBACCiB,GACD,kBAAC,IAAD,CAAOC,MAAM,oCACZ,kBAAC,IAAD,CACCC,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,KACxEE,YAAaL,EAAYM,MAAQN,EAAYM,KAAKL,MAAQD,EAAYM,KAAKL,MAAQ,IAFpF,UAIKD,EAAYO,WAJjB,YAI+BP,EAAYQ,aAI5C,kBAAC,IAAD,CAAOP,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASZ,EAAIa,UAAQ,UAAjD,8BAGA,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,IAAIC,QAAQ,8IAApC,mG,wEC5BEE,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOjC,GAAIiC,EAAMjC,IAChB,kBAAC,IAAD,CACCkC,KAAM,kBAAC,IAAD,CAAmBN,QAASK,EAAMjB,GAAIa,UAAQ,QAClDC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASf,IAAKgB,IAAQC,IAAI,qBCkB5BC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVvB,EAFU,KAEG0B,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAed,KAAK,WAHxC,mBAGVkB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoB1C,IAAOC,KAAK,uBADhC,OACO0C,EADP,OAECL,EAAQK,GACRH,EAAU,MAHX,4CARe,sBACfxC,IAAO4C,WAAU,YAAgC,IAAD,IAA5BC,OAAUnD,EAAkB,EAAlBA,KAAMU,EAAY,EAAZA,KACnC,GAAa,yBAATV,EAAiC,CACpC,IAAMoD,EAAkBvD,SAASwD,gBAAgB,UACjDD,EAAgBlD,MAAQQ,EAAK4C,OAAS5C,EAAK4C,OAAS,eACpDzD,SAAS0D,KAAKC,WAAWC,aAAaL,OALzB,mCAafM,KACE,IAEH,IAAMzC,EAAK,SAAA0C,GACVhB,EAAegB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMpB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAM5C,GAAG,OAAOiB,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQhB,GAAG,SAASgB,GAAIA,MC1B3BX,IAAOC,KAAK,gBAEZwD,IAASC,OAAO,kBAAC,EAAD,MAASnE,SAASoE,eAAe,W","file":"static/js/main.be3dc7d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","/* global VK */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport bridge from '@vkontakte/vk-bridge';\n\nvar btn = document.createElement (('v' == '\\v') ? '<input name=\"myName\">' : 'input'); btn.name = 'myName';\nbtn.type = 'button'; // или 'submit', или 'reset';\nbtn.id = 'myUniqueID';\nbtn.value = 'Дави!'; // или 'Отправить', или 'Очистить'...\nbtn.style.cssText = 'color: red; margin-top: 100px; ...';\nbtn.onclick = function (){\nbridge.send(\"VKWebAppShowNativeAds\", {ad_format:\"preloader\"})\n.then(data => console.log(data.result))\n.catch(error => console.log(error));\n};\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick=\"bridge.send('VKWebAppShowNativeAds', {ad_format:'preloader'}) .then(data => console.log(data.result)) .catch(error => console.log(error));\">\n\t\t\t\t\tсмотреть рекламу\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from '@vkontakte/vk-bridge';\nimport '@vkontakte/vkui';\nimport App from \"./App\";\n\n\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}